// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Keys_Onboarding.Specflow
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Owner properties")]
    public partial class OwnerPropertiesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OwnerProperties.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Owner properties", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Search for a property under My Properties Page")]
        [NUnit.Framework.CategoryAttribute("search")]
        public virtual void BDD_SearchForAPropertyUnderMyPropertiesPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Search for a property under My Properties Page", new string[] {
                        "search"});
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given("User have logged into the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then("User search results for property are successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Delete a property under My Properties page")]
        [NUnit.Framework.CategoryAttribute("delete")]
        public virtual void BDD_DeleteAPropertyUnderMyPropertiesPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Delete a property under My Properties page", new string[] {
                        "delete"});
#line 10
this.ScenarioSetup(scenarioInfo);
#line 11
 testRunner.Given("One User have logged into the application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Then("User delete a property should be successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Edit a property by uploading a picture")]
        [NUnit.Framework.CategoryAttribute("edit")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("unloading")]
        [NUnit.Framework.CategoryAttribute("a")]
        [NUnit.Framework.CategoryAttribute("picture")]
        public virtual void BDD_EditAPropertyByUploadingAPicture()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Edit a property by uploading a picture", new string[] {
                        "edit",
                        "by",
                        "unloading",
                        "a",
                        "picture"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.Given("User have logged into the My properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 17
 testRunner.Then("User edit a property by uploading a picture should be successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Edit a property by searching address")]
        [NUnit.Framework.CategoryAttribute("edit")]
        [NUnit.Framework.CategoryAttribute("by")]
        [NUnit.Framework.CategoryAttribute("searching")]
        [NUnit.Framework.CategoryAttribute("address")]
        public virtual void BDD_EditAPropertyBySearchingAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Edit a property by searching address", new string[] {
                        "edit",
                        "by",
                        "searching",
                        "address"});
#line 20
this.ScenarioSetup(scenarioInfo);
#line 21
 testRunner.Given("the User have logged into the My properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
 testRunner.Then("User edit a property by searching address should be successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Edit a property from Excel Data")]
        [NUnit.Framework.CategoryAttribute("edit")]
        [NUnit.Framework.CategoryAttribute("from")]
        [NUnit.Framework.CategoryAttribute("Excel")]
        [NUnit.Framework.CategoryAttribute("Data")]
        public virtual void BDD_EditAPropertyFromExcelData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Edit a property from Excel Data", new string[] {
                        "edit",
                        "from",
                        "Excel",
                        "Data"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("A user have logged into the My properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.Then("User edit a property from Excel data should be successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("BDD_Add a property from Excel Data")]
        [NUnit.Framework.CategoryAttribute("Add")]
        [NUnit.Framework.CategoryAttribute("from")]
        [NUnit.Framework.CategoryAttribute("Excel")]
        [NUnit.Framework.CategoryAttribute("Data")]
        public virtual void BDD_AddAPropertyFromExcelData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BDD_Add a property from Excel Data", new string[] {
                        "Add",
                        "from",
                        "Excel",
                        "Data"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 31
 testRunner.Given("user have logged into the My properties page successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
 testRunner.Then("User add a property from Excel data should be successfully", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
